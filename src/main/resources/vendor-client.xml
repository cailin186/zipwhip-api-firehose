<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- The message listener container for Broker A1 -->
    <bean id="jmsContainerA1" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="destinationName" value="/vendor/aol"/>
        <property name="connectionFactory">
            <!-- Actually does the work of connecting to broker A1 -->
            <bean id="connectionFactoryA1" class="org.springframework.jms.connection.CachingConnectionFactory">
                <constructor-arg index="0">
                    <bean class="org.apache.activemq.ActiveMQConnectionFactory">

                        <!-- This should point to your broker -->
                        <property name="brokerURL" value="tcp://broker-vendor-1.zipwhip.com:61616"/>
                        <property name="userName" value="{your-user-name}"/>
                        <property name="password" value="{your-password}"/>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="messageListener">
            <bean class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
                <property name="delegate" ref="exampleJmsListener"/>
                <property name="defaultListenerMethod" value="onMessage"/>
            </bean>
        </property>
    </bean>

    <!-- The message listener container for Broker B1 -->
    <bean id="jmsContainerB1" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="destinationName" value="/vendor/aol"/>
        <property name="connectionFactory" ref="connectionFactoryB1"/>
        <property name="messageListener">
            <bean class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
                <property name="delegate" ref="exampleJmsListener"/>
                <property name="defaultListenerMethod" value="onMessage"/>
            </bean>
        </property>
    </bean>


    <!-- Actually does the work of connecting to broker B1 -->
    <bean id="connectionFactoryB1" class="org.springframework.jms.connection.CachingConnectionFactory">
        <constructor-arg index="0">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">

                <!-- This should point to your broker -->
                <property name="brokerURL" value="tcp://broker-vendor-2.zipwhip.com:61616"/>
                <property name="userName" value="{your-user-name}"/>
                <property name="password" value="{your-password}"/>
            </bean>
        </constructor-arg>
    </bean>

    <!-- Receives work via JMS -->
    <bean name="exampleJmsListener" class="com.zipwhip.vendor.ExampleJmsListener">
        <property name="signalTokenProcessor" ref="signalTokenProcessor"/>
    </bean>

    <!--
      - The SignalTokenProcessor's job is to process the SignalTokens that come from Zipwhip's JMS connectivity.
      - In this case, we're just logging them via Log4j. In real world scenario, there should be some database activity
      - that the vendor uses to record these events.
      -->
    <bean id="signalTokenProcessor" class="com.zipwhip.api.signals.LoggingSignalTokenProcessor"/>

</beans>